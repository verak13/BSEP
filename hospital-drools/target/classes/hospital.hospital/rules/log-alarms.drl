package hospital.hospital.rules;

import hospital.hospital.model.cep.LogEvent;
import hospital.hospital.model.cep.UserLoginEvent;
import hospital.hospital.services.MailService;
import hospital.hospital.model.BlackListedIP;

import hospital.hospital.model.cep.alarms.InactiveUserAlarm;
import hospital.hospital.model.cep.alarms.BruteForceLoginAlarm;
import hospital.hospital.model.cep.alarms.ErrorLogAlarm;
import hospital.hospital.model.cep.alarms.BlackListedIPAlarm;

import java.time.LocalDate;
import java.time.temporal.ChronoUnit;

global MailService mailService


rule "More than 100 unsuccessful logins with same username in 60 sec, notify admin of hospital"
    when
          $l1: LogEvent($username: log.getUsername(), log.getType() == "LOGIN_ERROR")
                 $attempts: Long(intValue >= 100) from accumulate(
                            $l2: LogEvent(
                                this != $l1,
                                log.getUsername() == $username,
                                log.getType() == "LOGIN_ERROR",
                                this meets[60s] $l1
                            ),
                            count($l2)
                        )
                         not (BruteForceLoginAlarm(username == $username))
    then
        System.out.println("\n\n==== TRIGEROVAN ALARM ZA 100 POKUSAJA U MINUTI ===");
        System.out.println("username: " + $username);
        insert(new BruteForceLoginAlarm($username, $attempts));
end

rule "Brute force login alarm triggered, notify user by email"
    when
        $alarm: BruteForceLoginAlarm($username: username, $attempts: attempts)
    then
       String msg = "User with email : " + $username + " tried to log in more than " + $attempts + " times in less than one minute.";
       mailService.notifyAdmin($alarm.getAdminEmail(), msg);
       mailService.saveBruteForceAlarm($alarm);
end

rule "User logged in after more than 90 days from last login, triger NotActiveAlarm"
    when
        $e : UserLoginEvent($email: email, $lastLogin: lastLogin)
        eval(ChronoUnit.DAYS.between($lastLogin, LocalDate.now()) >= 90)
    then
        insert(new InactiveUserAlarm($email, ChronoUnit.DAYS.between($lastLogin, LocalDate.now())));
        System.out.println("\n\n==== TRIGEROVAN ALARM ZA NEAKTIVNOG KORISNIKA ====");
        System.out.println("username: " + $email);

end

rule "Inactive user alarm triggered, notify admin by email"
  when
        $alarm : InactiveUserAlarm($userEmail: userEmail, $daysInactive: daysInactive)
    then
        String msg = "User with email : " + $userEmail + " hasn't been active for more than 90 days and tried to log in today.";
        mailService.notifyAdmin($alarm.getAdminEmail(), msg);
        mailService.saveInactiveUserAlarm($alarm);
end

rule "Error log appears, trigger ErrorLogAlarm"
    no-loop
  when
       $error: LogEvent(log.getType() == "ERROR", $message: log.getMessage())
       not (ErrorLogAlarm(errorMsg == $message))
    then
        insert(new ErrorLogAlarm($message));
        System.out.println("\n\n==== TRIGEROVAN ALARM ZA ERROR LOG ====");
        System.out.println("message: " + $message);
end

rule "Error log alarm triggered, notify admin"
no-loop
    when
        $alarm : ErrorLogAlarm($message: errorMsg, $date: date)
    then
       String msg = "ERROR log appeared with error message : " + $message + " date: " + $date + " . ";
       mailService.notifyAdmin($alarm.getAdminEmail(), msg);
       mailService.saveErrorLogAlarm($alarm);
end

rule "User tried to login with ip address from blacklisted ip addresses, trigger BlackListedIPAlarm"
    when
        $l : LogEvent(log.getType() == "LOGIN" || log.getType()  == "LOGIN_ERROR", $ip : log.getIp(), $username: log.getUsername())
        BlackListedIP(list contains $ip)

    then
        insert(new BlackListedIPAlarm($ip, $username));
        System.out.println("\n\n==== TRIGEROVAN ALARM ZA BLACK LISTED IP ====");
        System.out.println("ip: " + $ip);
end

rule "Black listed ip alarm triggered, notify admin"
no-loop true
    when
        $alarm : BlackListedIPAlarm($ip: ip, $userEmail: userEmail, $date: date)
    then
       String msg = "User with email " + $userEmail + " tried to log in on date " + $date + " from ip address: " + $ip + " which is blacklisted.";
       mailService.notifyAdmin($alarm.getAdminEmail(), msg);
       mailService.saveBlacklistedIPAlarm($alarm);
end